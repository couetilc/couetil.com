name: Build, Test, Deploy

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*.*.*.*'
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

jobs:
  test:
    runs-on: macos-latest
    name: Run Tests
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: guardian/actions-setup-node@main
        with:
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        uses: bahmutov/npm-install@v1

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

  deploy:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest
    needs: test
    name: Deploy Website
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: guardian/actions-setup-node@main
        with:
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies
        uses: bahmutov/npm-install@v1

      - name: Build
        run: npm run build

      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOST }}

      - name: Rsync to Remote
        run: >
          rsync -av
          bootstrap.sh
          secrets.yml
          compose
          build
          caddy
          plausible
          ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:~/deployment

      - name: Re-deploy
        run: >
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}
          'cd deployment && ./bootstrap.sh'

      - name: Purge Cloudflare Cache
        run: >
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE }}/purge_cache"
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_TOKEN }}"
          -H "Content-Type: application/json"
          --data '{"purge_everything":true}'
